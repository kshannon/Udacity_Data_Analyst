geom_tile(data=melted_cormat, aes(fill=value), color="black")+
geom_text(aes(Var2, Var1, label = value), color = "black", size = 2)+
scale_fill_gradient2(low="#3794bf", high="#df8640", mid="#ffffff", midpoint=0, limit=c(-1,1),name="Correlation\n(Pearson)") +
theme(axis.text.x = element_text(angle=45, vjust=1, size=11, hjust=1), legend.title = element_text(size=10))+
coord_equal()
#qplot(x=wine_data$pH, y=wine_data$quality, data=melt(cor(wine_data)), fill=value, geom="tile")
#ggplot(data = wine_data, aes(x=pH, y=quality, fill=value)) +
#  geom_tile()
cormat <- round(cor(data),2)
head(cormat)
tail(cormat)
melted_cormat <- melt(cormat)
head(melted_cormat)
tail(melted_cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
#qplot(x=wine_data$pH, y=wine_data$quality, data=melt(cor(wine_data)), fill=value, geom="tile")
#ggplot(data = wine_data, aes(x=pH, y=quality, fill=value)) +
#  geom_tile()
cormat <- round(cor(data),2)
head(cormat)
tail(cormat)
melted_cormat <- melt(cormat)
head(melted_cormat)
tail(melted_cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
cormat <- round(cor(data),2)
head(cormat)
tail(cormat)
cormat <- round(cor(data),2)
num_data <-- data
summary(num_data)
View(num_data)
View(num_data)
View(num_data)
View(num_data)
delete(num_data)
View(data)
num_data <- data
View(num_data)
View(num_data)
View(data)
num_data <- subset( num_data, select = - name
)
View(data)
num_data[num_data$Tag.Version == "B", "Tag.Version"] <- 0
View(num_data)
num_data[num_data$handedness == "B", "Tag.Version"] <- 0
View(num_data)
num_data[num_data$handedness == "R", "handedness"] <- 1
num_data[num_data$handedness == "R", "handedness"] <- 1
num_data <- subset( num_data, select = - Tag.Version )
num_data[num_data$handedness == NA, "handedness"] <- 1
num_data[num_data$handedness == "NA", "handedness"] <- 1
num_data <- data
num_data <- subset( num_data, select = - name)
num_data$handedness[num_data$handedness=="B"] <- 0
View(num_data)
num_data <- data
num_data <- subset( num_data, select = - name)
e
e
levels(num_data$handedness)
within(num_data, handedness <- factor(handedness, labels = c(0, 1, 2)))
View(num_data)
View(data)
num_data <- within(num_data, handedness <- factor(handedness, labels = c(0, 1, 2)))
View(num_data)
View(data)
View(num_data)
View(data)
View(num_data)
View(data)
View(num_data)
View(data)
#qplot(x=wine_data$pH, y=wine_data$quality, data=melt(cor(wine_data)), fill=value, geom="tile")
#ggplot(data = wine_data, aes(x=pH, y=quality, fill=value)) +
#  geom_tile()
cormat <- round(cor(num_data),2)
head(cormat)
tail(cormat)
melted_cormat <- melt(cormat)
head(melted_cormat)
tail(melted_cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
cormat <- round(cor(num_data),2)
View(num_data)
within(num_data, handedness <- factor(handedness, labels = c(0, 1, 2)))
apply(num_data, 2, function(x) is.numeric(x))
is.numeric(num_data$HR)
sapply(num_data, is.numeric)
num_data$handedness <- as.integer(num_data$handedness)
sapply(num_data, is.numeric)
num_data <- data
num_data <- subset( num_data, select = - name)
levels(num_data$handedness)
# B = 0, L = 1, R = 2
num_data <- within(num_data, handedness <- factor(handedness, labels = c(0, 1, 2)))
num_data$handedness <- as.integer(num_data$handedness)
sapply(num_data, is.numeric)
#qplot(x=wine_data$pH, y=wine_data$quality, data=melt(cor(wine_data)), fill=value, geom="tile")
#ggplot(data = wine_data, aes(x=pH, y=quality, fill=value)) +
#  geom_tile()
cormat <- round(cor(num_data),2)
head(cormat)
tail(cormat)
melted_cormat <- melt(cormat)
head(melted_cormat)
tail(melted_cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
cormat <- round(cor(data),2)
head(cormat)
tail(cormat)
melted_cormat <- melt(cormat)
head(melted_cormat)
tail(melted_cormat)
# Get lower triangle of the correlation matrix
get_lower_tri<-function(cormat){
cormat[upper.tri(cormat)] <- NA
return(cormat)
}
# Get upper triangle of the correlation matrix
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
upper_tri <- get_upper_tri(cormat)
upper_tri
melted_cormat <- melt(upper_tri, na.rm = TRUE)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
labs(x="Features", y="Features", title="Correlation Heatmap Matrix") +
geom_tile(data=melted_cormat, aes(fill=value), color="black")+
geom_text(aes(Var2, Var1, label = value), color = "black", size = 2)+
scale_fill_gradient2(low="#3794bf", high="#df8640", mid="#ffffff", midpoint=0, limit=c(-1,1),name="Correlation\n(Pearson)") +
theme(axis.text.x = element_text(angle=45, vjust=1, size=11, hjust=1), legend.title = element_text(size=10))+
coord_equal()
ggplot(aes(x = weight, color = factor(height)),
data = num_data) +
geom_histogram(binwidth = 0.01)
ggplot(aes(x = weight, color = factor(height)),
data = num_data) +
geom_histogram(binwidth = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
coord_trans(x = 'log10') +
stat_smooth(method = 'lm', formula = y ~ log10(x))
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
coord_trans(x = 'log10') +
stat_smooth(method = 'lm', formula = y ~ log10(x))
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
stat_smooth(method = 'lm', formula = y ~ log10(x))
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
coord_trans(x = 'log10') +
stat_smooth(method = 'lm', formula = y ~ log10(x))
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
coord_trans(x = 'log10')
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
coord_trans(x = 'log10') +
stat_smooth(method = 'lm', formula = y ~ log10(x))
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
coord_trans(x = 'log10')
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
coord_cartesian(ylim = ylim1*1.05)
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
coord_cartesian(ylim = ylim1*2.05)
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
coord_cartesian(ylim = ylim1*22.05)
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
coord_cartesian(ylim = ylim1*22222.05)
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE)
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(subset = .(value > 0), alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE)
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
p1 <‐ ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(subset = (value > 0), alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE)
p2 <‐ ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE)
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
num_data <- subset(avg, value > 0)
num_data <- subset(HR, value > 0)
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE)
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
num_data <- subset(avg, value > 0)
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE)
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
num_data2 <- subset(num_data$avg, value > 0)
p1 <- ggplot(aes(x = avg, y = height), data = num_data2) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE)
p2 <- ggplot(aes(x = avg, y = HR), data = num_data2) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
num_data2 <- subset(num_data$avg, value > 0)
num_data2 <- subset(num_data$avg, .(value > 0)
p1 <- ggplot(aes(x = avg, y = height), data = num_data2) +
num_data2 <- subset(num_data$avg, .(value > 0))
p1 <- ggplot(num_data[which(num_data$avg>0),],aes(x = avg, y = height), data = num_data2) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE)
p2 <- ggplot(aes(x = avg, y = HR), data = num_data2) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
p1 <- ggplot(num_data[which(num_data$avg>0),],aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE)
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
levels(num_data$avg)
levels(num_data$weight)
levels(num_data$handedness)
View(num_data)
df[df$prop == 0] <- NA
p1 <- ggplot(num_data[which(num_data$avg>0),],aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(quantile(wine_data$volatile.acidity, 0.01)
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
df[df$prop == 0] <- NA
p1 <- ggplot(num_data[which(num_data$avg>0),],aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(quantile(wine_data$volatile.acidity, 0.01)))
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(quantile(wine_data$volatile.acidity, 0.01)))
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(quantile(num_data$avg, 0.01)))
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(quantile(num_data$avg, 1)))
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(quantile(num_data$avg, .1)))
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(quantile(num_data$avg, .001)))
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) #+
# scale_x_continuous(limits = c(quantile(num_data$avg, .001)))
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(quantile(num_data$avg, .001)) +
scale_x_continuous(limits = c(quantile(num_data$avg, .001)))
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(quantile(num_data$avg, .001)) +
scale_x_continuous(limits = c(quantile(num_data$avg, .0099)))
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(quantile(num_data$avg, .01)) +
scale_x_continuous(limits = c(quantile(num_data$avg, .99)))
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(quantile(num_data$avg, .01))) +
scale_x_continuous(limits = c(quantile(num_data$avg, .99)))
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(1, 1000)
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(0, 1000)
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(0, 10)
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) +
scale_x_continuous(limits = c(0, 1)
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#df[df$prop == 0] <- NA
#num_data[which(num_data$avg>0),],
p1 <- ggplot(aes(x = avg, y = height), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter') +
geom_smooth(method = "lm", se = TRUE) #+
#scale_x_continuous(limits = c(0, 1)
p2 <- ggplot(aes(x = avg, y = HR), data = num_data) +
geom_point(alpha = 1/4, position = 'jitter')+
geom_smooth(method = "lm", se = TRUE)
grid.arrange(p1, p2, nrow = 1)
#summarize wine_data
summary(data)
str(data)
tapply(df$dt, df$group, summary)
df %>% group_by(group) %>% summarize(mean=mean(dt), sum=sum(dt))
data %>% group_by(group) %>% summarize(mean=mean(dt), sum=sum(dt))
data %>% group_by(handedness) %>% summarize(mean=mean(dt), sum=sum(dt))
data %>% group_by(handedness) %>% summarize()
data %>% group_by(handedness)
data %>% group_by(handedness) %>% summary()
data %>% group_by(handedness) %>% summarize(mean=mean(dt), sum=sum(dt)
data %>% group_by(handedness) %>% summarize((mean=mean(dt), sum=sum(dt))
```
data %>% group_by(handedness) %>% summarize((mean=mean(dt), sum=sum(dt))
data %>% group_by(handedness) %>% summarize(mean=mean(dt), sum=sum(dt))
data %>% group_by(handedness) %>% summarize()
describe.by(data, handedness)
library('psych')
library('doBy')
lsummaryBy()
```
summaryBy()
aggregate(handedness~hr, data=data, FUN="mean")
aggregate(handedness~HR, data=data, FUN="mean")
aggregate(HR~handedness, data=data, FUN="mean")
aggregate(HR~handedness, data=data, FUN="count")
aggregate(HR~handedness, data=data, FUN="mean")
aggregate(HR~handedness, data=data, FUN="length")
aggregate(HR~handedness, data=data, FUN="sum")
aggregate(HR~handedness, data=data, FUN="min")
aggregate(HR~handedness, data=data, FUN="max")
aggregate(HR~handedness, data=data, FUN="median")
aggregate(avg~handedness, data=data, FUN="median")
```{r summary by group, echo=FALSE}
aggregate(avg~handedness, data=data, FUN="mean")
aggregate(avg~handedness, data=data, FUN="length")
aggregate(avg~handedness, data=data, FUN="min")
aggregate(avg~handedness, data=data, FUN="max")
aggregate(avg~handedness, data=data, FUN="median")
```{r corr heat map, echo=FALSE, results='hide'}
